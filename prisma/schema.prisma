// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clientWalletAddress String @unique // Unique client wallet address
  EoaAddress String @unique // Unique EOA address
  EoaPrivateKey String? // Optional EOA private key for client-side operations
  salt String // Salt for cryptographic operations
  payments Payment[] // One-to-many relationship with Payment
}

// Payment status enum
enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model Payment {
  id Int @id @default(autoincrement())
  uniqueId String @unique // Unique identifier for the payment
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  amount Float // Amount of the payment
  tokenAddress String // Token address for the payment
  txHash String? // Optional transaction hash for on-chain withdraw/transfer
  status PaymentStatus @default(PENDING) // Payment status, default pending
  User User @relation(fields: [userId], references: [id])
  userId Int // Foreign key to User
}